# ==================
# Project definition
# ==================

# Derived from https://peps.python.org/pep-0621/

[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=42", # At least v42 of setuptools required.
  "versioningit",
]

[project]
name = "pueblo"
description = "Pueblo - a Python toolbox library."
readme = "README.md"
keywords = [
  "general purpose",
  "library",
  "mixed",
  "pueblo",
]
license = { text = "LGPL 3, EUPL 1.2" }
authors = [
  { name = "Andreas Motl", email = "andreas.motl@panodata.org" },
]
requires-python = ">=3.7"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Environment :: Console",
  "Intended Audience :: Customer Service",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: Information Technology",
  "Intended Audience :: Telecommunications Industry",
  "License :: OSI Approved :: European Union Public Licence 1.2 (EUPL 1.2)",
  "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: POSIX :: Linux",
  "Operating System :: Unix",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Communications",
  "Topic :: Education",
  "Topic :: Software Development :: Libraries",
  "Topic :: Text Processing",
  "Topic :: Utilities",
]

dynamic = [
  "version",
]

dependencies = [
  "contextlib-chdir; python_version<'3.11'",
  "importlib-metadata; python_version<'3.8'",
  "platformdirs<5",
]

optional-dependencies.all = [
  "pueblo[cli,dataframe,fileio,nlp,notebook,proc,testing,web]",
]
optional-dependencies.cli = [
  "click<9",
  "click-aliases<2,>=1.0.4",
  "colorlog<7",
  "python-dotenv<2",
]
optional-dependencies.dataframe = [
  "dask",
  "numpy",
  "pandas",
  "pyarrow",
]
optional-dependencies.develop = [
  "black[jupyter]<25",
  "mypy<2",
  "poethepoet<1",
  "pyproject-fmt>=1.3,<2.5",
  "ruff<0.8",
  "validate-pyproject<0.19",
]
optional-dependencies.fileio = [
  "fsspec[abfs,dask,gcs,git,github,http,s3,smb]<2024.11",
  "pathlibfs<0.6",
  "python-magic<0.5",
  "yarl<1.16",
]
optional-dependencies.nlp = [
  "aiohttp<3.11",
  "langchain>=0.1,<0.4",
  "langchain-text-splitters<0.4",
  "unstructured<0.17",
]
optional-dependencies.notebook = [
  "nbclient<0.11",
  "nbdime<5",
  "notebook<8",
  "pytest-notebook<0.11,>=0.10",
  "testbook<0.5",
]
optional-dependencies.proc = [
  "psutil<7",
]
optional-dependencies.release = [
  "build<2",
  "twine<6",
]
optional-dependencies.test = [
  "pueblo[testing]",
]
optional-dependencies.testing = [
  "coverage~=7.3",
  "pytest<8",
  "pytest-cov<6",
  "pytest-env<2",
  "pytest-mock<4",
]
optional-dependencies.web = [
  "requests-cache<2",
]
urls.changelog = "https://github.com/pyveci/pueblo/blob/main/CHANGES.md"
urls.documentation = "https://github.com/pyveci/pueblo"
urls.homepage = "https://github.com/pyveci/pueblo"
urls.repository = "https://github.com/pyveci/pueblo"
scripts.ngr = "pueblo.ngr.cli:main"
scripts.pueblo = "pueblo.cli:cli"

[tool.setuptools]
# https://setuptools.pypa.io/en/latest/userguide/package_discovery.html
packages = [ "pueblo" ]

[tool.black]
line-length = 120

# extend-exclude = ""

[tool.ruff]
line-length = 120

extend-exclude = [
  "example_*",
]

lint.select = [
  # Builtins
  "A",
  # Bugbear
  "B",
  # comprehensions
  "C4",
  # Pycodestyle
  "E",
  # eradicate
  "ERA",
  # Pyflakes
  "F",
  # isort
  "I",
  # pandas-vet
  "PD",
  # return
  "RET",
  # Bandit
  "S",
  # print
  "T20",
  "W",
  # flake8-2020
  "YTT",
]

lint.per-file-ignores."*.ipynb" = [
  "PD901", # Avoid using the generic variable name `df` for DataFrames
  "T201",  # `print` found
]
lint.per-file-ignores."__init__.py" = [ "F401" ] # `xxx` imported but unused
lint.per-file-ignores."tests/*" = [ "S101" ] # Use of `assert` detected

[tool.isort]
profile = "black"
skip_glob = "**/site-packages/**"
skip_gitignore = false

[tool.pytest.ini_options]
minversion = "2.0"
addopts = """
  -rfEX -p pytester --strict-markers --verbosity=3
  --cov=pueblo --cov-report=term-missing --cov-report=xml
  --ignore=tests/ngr
  """
log_level = "DEBUG"
log_cli_level = "DEBUG"
testpaths = [ "tests" ]
xfail_strict = true
markers = [
  "ngr",
]
env = [
  "PYDEVD_DISABLE_FILE_VALIDATION=1",
]

# pytest-notebook settings
nb_test_files = "true"
nb_coverage = "false"
nb_diff_ignore = [
  "/metadata/language_info",
  "/cells/*/execution_count",
  "/cells/*/outputs/*/execution_count",
]

[tool.coverage.run]
branch = false
source = [ "pueblo" ]
omit = [
  "tests/*",
]

[tool.coverage.report]
fail_under = 0
show_missing = true
omit = [
  "tests/*",
]

[tool.mypy]
packages = [ "pueblo" ]
exclude = [
]
check_untyped_defs = true
ignore_missing_imports = true
implicit_optional = true
install_types = true
no_implicit_optional = true
non_interactive = true
show_error_codes = true
strict_equality = true
warn_unused_ignores = true
warn_redundant_casts = true

[tool.versioningit.vcs]
method = "git"
default-tag = "0.0.0"

# ===================
# Tasks configuration
# ===================

[tool.poe.tasks]
format = [
  { cmd = "black ." },
  # Configure Ruff not to auto-fix (remove!):
  # Ignore unused imports (F401), unused variables (F841), `print` statements (T201), and commented-out code (ERA001).
  { cmd = "ruff check --fix --ignore=ERA --ignore=F401 --ignore=F841 --ignore=T20 --ignore=ERA001 ." },
  { cmd = "pyproject-fmt --keep-full-version pyproject.toml" },
]

lint = [
  { cmd = "ruff check ." },
  { cmd = "black --check ." },
  { cmd = "validate-pyproject pyproject.toml" },
  { cmd = "mypy" },
]
test = "pytest -m 'not ngr'"
test-full = "pytest"
build = { cmd = "python -m build" }
check = [ "lint", "test" ]
check-full = [ "lint", "test-full" ]

release = [
  { cmd = "python -m build" },
  { cmd = "twine upload --skip-existing dist/*.tar.gz dist/*.whl" },
]
